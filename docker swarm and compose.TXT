DOCKER SWARM:
Add host to swarm
docker swarm init --advertise-addr hostname

join manager to node
docker swarm join-token manager_name{worker,manager}
docker swarm join --token worker_key

currently active swarm nodes
docker node ls

leave swarm or left the node
docker swarm leave --force

docker info

docker node inspect self --pretty

docker node demote ID

docker node rm ID 

docker node update --role {manager,worker}
DOCKER-COMPOSE:

docker-compose up -d

docker-compose down

docker-compose ps


Yaml to docker-compose:
service,network,volumes

version-which version 2 or 3
version: '3'

service-which service
services:

EX:
version: '3'

services:
    distro:,database,elasticsearch,kibana....
      image: nginx //image_name
      container_name: elastic
      depends_on:
      distro //depends whoch service
      always: restart //reboot when node failure always
      ports:
        - 8000:8000
      environments:
        FIRST_NODE: http://localhost //variable type declarations
        PORT_NAME: 9200
       links: 
         - distro //links to distro services
         - database:db
         - web  //web services
     entrypoints: tail -f /dev/null tail -f /etc/elastic.yml //tail -f node doesn't fail
     volumes:
       - data:/devel/tmp/

   services:  
      db:
        volumes://persisted volumes
           data://already used volumes
             external: true
     
docker services:

docker service create --name  service_name -p 80:80 httpd

docker service ls
 
docker service service_name ps

docker service scale service_name=2

docker service logs service_name
 
docker service rm service_name     
                  